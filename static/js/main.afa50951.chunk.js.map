{"version":3,"sources":["components/Login/index.js","components/Header/index.js","components/RestaurantListItem/index.js","components/Footer/index.js","components/Home/index.js","components/Counter/index.js","components/RestaurantFoodItem/index.js","components/RestaurantDetails/index.js","components/CartListItem/index.js","components/Cart/index.js","components/NotFound/index.js","components/AuthenticatedRoute/index.js","App.js","index.js"],"names":["Login","state","username","password","displayErrorMessage","errorMessage","onChangeUsername","event","setState","target","value","onChangePassword","a","onLoginSuccess","jwtToken","history","props","Cookies","set","expires","path","replace","onLoginFailure","onSubmitLoginForm","preventDefault","userDetails","loginOptions","method","body","JSON","stringify","fetch","response","json","responseData","ok","jwt_token","error_msg","this","undefined","get","to","className","src","alt","onSubmit","htmlFor","id","type","onChange","Component","Header","isHamburgerActive","isCartRouteActive","onClickHamburgers","prevItem","onClickHamburgersCloseButton","onClickLogout","remove","displayHamburgerMenu","activeLinkClassName","onClick","size","withRouter","RestaurantCard","restaurantItem","testid","imageUrl","name","cuisine","color","userRating","rating","totalReviews","Footer","sortByOptions","displayText","apiConstants","Home","apiStatus","activePage","LIMIT","sortByRatingValue","searchValue","carouselImageList","restaurantsList","getRestaurantsList","offset","restaurantsListUrl","options","headers","Authorization","restaurantsResponse","restaurantsData","formattedRestaurantsData","restaurants","map","eachItem","costForTwo","cost_for_two","groupByTime","group_by_time","hasOnlineDelivery","has_online_delivery","hasTableBooking","has_table_booking","image_url","isDeliveredNow","is_delivering_now","location","menuType","menu_type","opensAt","opens_at","user_rating","ratingColor","rating_color","ratingText","rating_text","total_reviews","getCarouselImages","offers","imageUlr","formattedData","onClickTryAgainButton","renderOffersFailureContainer","renderSlickLoader","renderReactSlider","infinite","dots","autoplay","speed","slidesToShow","slidesToScroll","renderReactSliderContainer","onChangeSelectValue","incrementPageNumber","prevState","decrementPageNumber","renderLoader","renderFailureContainer","onClickHomeButton","renderRestaurantsList","renderHome","Counter","onDecrement","cartListItem","reloadCart","cartDataList","parse","localStorage","getItem","currentFoodItem","find","quantity","updatedFoodItem","newCartDataList","filter","foodItemIndex","findIndex","splice","newCartDataListString","setItem","onIncrement","RestaurantFoodItem","foodItem","onAddReloadRestaurantDetails","onClickAddFoodItemButton","cost","cartList","push","stringifiedCartList","savedCartList","console","log","updatedCartItemsString","cartDataForAddItemButton","foodItemAddButtonOrCounter","RestaurantDetails","restaurantDetails","foodItems","reloadRestaurantDetails","getRestaurantDetails","match","params","restaurantDetailsUrl","restaurantsDetailsResponse","restaurantDetailsData","formattedRestaurantDetailsData","itemsCount","items_count","reviewsCount","reviews_count","formattedFoodItemsData","food_items","foodType","food_type","renderRestaurantDetails","renderRestaurantDetailsPage","CartListItem","Cart","placedOrderSuccessfully","onClickPlaceOrder","removeItem","renderSuccessFullyPlacedOrderPage","renderEmptyCartView","renderCartListView","cartItemsList","itemsSum","orderTotal","forEach","renderCartPage","cartItemsString","isCartEmpty","length","NotFound","AuthenticatedRoute","App","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afa50951.chunk.js","sourcesContent":["import {Component} from 'react'\nimport {Redirect} from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nimport './index.css'\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: '',\n    displayErrorMessage: false,\n    errorMessage: '',\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangePassword = async event => {\n    this.setState({password: event.target.value})\n  }\n\n  onLoginSuccess = jwtToken => {\n    const {history} = this.props\n    Cookies.set('jwt_token', jwtToken, {\n      expires: 30,\n      path: '/',\n    })\n    history.replace('/')\n  }\n\n  onLoginFailure = errorMessage => {\n    this.setState({displayErrorMessage: true, errorMessage})\n  }\n\n  onSubmitLoginForm = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {username, password}\n    const loginUrl = 'https://apis.ccbp.in/login'\n    const loginOptions = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(loginUrl, loginOptions)\n    const responseData = await response.json()\n    if (response.ok) {\n      this.onLoginSuccess(responseData.jwt_token)\n    } else {\n      this.onLoginFailure(responseData.error_msg)\n    }\n  }\n\n  render() {\n    const {errorMessage, displayErrorMessage} = this.state\n    const jwtToken = Cookies.get('jwt_token')\n    if (jwtToken !== undefined) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <div className=\"login-bg-container\">\n        <img\n          className=\"small-login-image\"\n          src=\"https://res.cloudinary.com/tskhayagreevac/image/upload/v1634731916/Rectangle_1457_v0vynx.jpg\"\n          alt=\"website logo\"\n        />\n        <div className=\"login-form-container\">\n          <form className=\"login-form\" onSubmit={this.onSubmitLoginForm}>\n            <img\n              className=\"login-form-logo\"\n              src=\"https://res.cloudinary.com/tskhayagreevac/image/upload/v1635642150/Group_7420_1_foidv5.png\"\n              alt=\"website logo\"\n            />\n            <h1 className=\"login-tasty-kitchens-heading\">Tasty Kitchens</h1>\n            <h1 className=\"login-form-heading\">Login</h1>\n            <label htmlFor=\"formUsername\" className=\"login-form-label\">\n              USERNAME\n            </label>\n            <input\n              id=\"formUsername\"\n              className=\"login-input-style\"\n              type=\"text\"\n              onChange={this.onChangeUsername}\n            />\n            <label htmlFor=\"formPassword\" className=\"login-form-label\">\n              PASSWORD\n            </label>\n            <input\n              id=\"formPassword\"\n              className=\"login-input-style\"\n              type=\"password\"\n              onChange={this.onChangePassword}\n            />\n            <button type=\"submit\" className=\"submit-button\">\n              Login\n            </button>\n          </form>\n          {displayErrorMessage ? (\n            <p className=\"login-error-message\">*{errorMessage}</p>\n          ) : null}\n        </div>\n        <img\n          src=\"https://res.cloudinary.com/tskhayagreevac/image/upload/v1634663585/Rectangle_1456_dyotst.jpg\"\n          alt=\"website login\"\n          className=\"login-body-image\"\n        />\n      </div>\n    )\n  }\n}\n\nexport default Login\n","import {Component} from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nimport {GiHamburgerMenu} from 'react-icons/gi'\n\nimport './index.css'\n\nclass Header extends Component {\n  state = {\n    isHamburgerActive: false,\n    isCartRouteActive: false,\n  }\n\n  onClickHamburgers = () => {\n    this.setState(prevItem => ({\n      isHamburgerActive: !prevItem.isHamburgerActive,\n    }))\n  }\n\n  onClickHamburgersCloseButton = () => {\n    this.setState(prevItem => ({\n      isHamburgerActive: !prevItem.isHamburgerActive,\n    }))\n  }\n\n  onClickLogout = () => {\n    const {history} = this.props\n    Cookies.remove('jwt_token')\n    history.replace('/login')\n  }\n\n  displayHamburgerMenu = () => {\n    const {isCartRouteActive} = this.state\n    const activeLinkClassName = isCartRouteActive ? 'active' : null\n    return (\n      <div className=\"header-small-links-bg-container\">\n        <ul className=\"header-links-list-small\">\n          <li className=\"larger-header-link-item\">\n            <Link to=\"/\" className={`nav-link-style ${activeLinkClassName}`}>\n              Home\n            </Link>\n          </li>\n          <Link to=\"/cart\" className={`nav-link-style ${activeLinkClassName}`}>\n            <li className=\"larger-header-link-item\">Cart</li>\n          </Link>\n          <li className=\"larger-header-link-item\">\n            <button\n              className=\"logout-button\"\n              type=\"button\"\n              onClick={this.onClickLogout}\n            >\n              Logout\n            </button>\n          </li>\n          <li className=\"larger-header-link-item\">\n            <button\n              className=\"hamburger-exit-button\"\n              type=\"button\"\n              onClick={this.onClickHamburgersCloseButton}\n            >\n              <img\n                src=\"https://res.cloudinary.com/tskhayagreevac/image/upload/v1634812708/Shape_vgjjz5.jpg\"\n                alt=\"exitButton\"\n                className=\"exit-image\"\n              />\n            </button>\n          </li>\n        </ul>\n      </div>\n    )\n  }\n\n  render() {\n    const {isHamburgerActive, activeLinkClassName} = this.state\n    return (\n      <>\n        <nav>\n          <div className=\"header-content-container\">\n            <Link to=\"/\" className=\"header-logo-link\">\n              <div className=\"header-logo-link-container\">\n                <img\n                  className=\"header-logo-image\"\n                  src=\"https://res.cloudinary.com/tskhayagreevac/image/upload/v1635642150/Group_7420_1_foidv5.png\"\n                  alt=\"website logo\"\n                />\n                <h1 className=\"header-logo-text\">Tasty Kitchens</h1>\n              </div>\n            </Link>\n            <ul className=\"header-links-list\">\n              <Link to=\"/\" className={`nav-link-style ${activeLinkClassName}`}>\n                <li className=\"larger-header-link-item\">Home</li>\n              </Link>\n              <Link\n                to=\"/cart\"\n                className={`nav-link-style ${activeLinkClassName}`}\n              >\n                <li className=\"larger-header-link-item\">Cart</li>\n              </Link>\n              <li className=\"larger-header-link-item\">\n                <button\n                  className=\"logout-button\"\n                  type=\"button\"\n                  onClick={this.onClickLogout}\n                >\n                  Logout\n                </button>\n              </li>\n            </ul>\n            <button\n              className=\"hamburger-button\"\n              type=\"button\"\n              onClick={this.onClickHamburgers}\n            >\n              <GiHamburgerMenu size=\"32\" />\n            </button>\n          </div>\n        </nav>\n        {isHamburgerActive ? this.displayHamburgerMenu() : null}\n      </>\n    )\n  }\n}\n\nexport default withRouter(Header)\n","import {Link} from 'react-router-dom'\n\nimport {AiFillStar} from 'react-icons/ai'\n\nimport './index.css'\n\nconst RestaurantCard = props => {\n  const {restaurantItem} = props\n  return (\n    <Link\n      to={`/restaurant/${restaurantItem.id}`}\n      className=\"restaurant-link-style\"\n    >\n      <li className=\"restaurant-list-item\" testid=\"restaurant-item\">\n        <div className=\"restaurant-cart-bg-container\">\n          <img\n            className=\"restaurant-card-image\"\n            src={restaurantItem.imageUrl}\n            alt=\"restaurant\"\n          />\n          <div className=\"restaurant-card-content\">\n            <p className=\"restaurant-name\">{restaurantItem.name}</p>\n            <p className=\"restaurant-cuisine\">{restaurantItem.cuisine}</p>\n            <div className=\"restaurant-card-rating-star\">\n              <AiFillStar color=\"#FFCC00\" />\n              <p className=\"restaurant-card-rating-text\">\n                {restaurantItem.userRating.rating}\n              </p>\n              <p className=\"restaurants-reviews-number\">\n                ({restaurantItem.userRating.totalReviews} rating)\n              </p>\n            </div>\n          </div>\n        </div>\n      </li>\n    </Link>\n  )\n}\n\nexport default RestaurantCard\n","import {\n  FaPinterestSquare,\n  FaInstagram,\n  FaTwitter,\n  FaFacebookSquare,\n} from 'react-icons/fa'\n\nimport './index.css'\n\nconst Footer = () => (\n  <div className=\"footer-bg-container\">\n    <div className=\"footer-icon-container\">\n      <img\n        className=\"footer-icon\"\n        src=\"https://res.cloudinary.com/tskhayagreevac/image/upload/v1635043150/Vector_yyxamo.png\"\n        alt=\"website-footer-logo\"\n      />\n      <h1 className=\"footer-heading\">Tasty Kitchens</h1>\n    </div>\n    <p className=\"footer-para\">\n      The only thing we are serious about is food. Contact us on\n    </p>\n    <div className=\"social-icons-container\">\n      <FaPinterestSquare\n        className=\"social-icon-style\"\n        testid=\"pintrest-social-icon\"\n      />\n      <FaInstagram\n        className=\"social-icon-style\"\n        testid=\"instagram-social-icon\"\n      />\n      <FaTwitter className=\"social-icon-style\" testid=\"twitter-social-icon\" />\n      <FaFacebookSquare\n        className=\"social-icon-style\"\n        testid=\"facebook-social-icon\"\n      />\n    </div>\n  </div>\n)\n\nexport default Footer\n","import {Component} from 'react'\nimport Cookies from 'js-cookie'\nimport Slider from 'react-slick'\nimport Loader from 'react-loader-spinner'\n\nimport {BiChevronLeftSquare, BiChevronRightSquare} from 'react-icons/bi'\nimport {BsFilterLeft} from 'react-icons/bs'\n\nimport Header from '../Header'\nimport RestaurantListItem from '../RestaurantListItem'\nimport Footer from '../Footer'\n\nimport './index.css'\n\nconst sortByOptions = [\n  {\n    id: 0,\n    displayText: 'Highest',\n    value: 'Highest',\n  },\n  {\n    id: 2,\n    displayText: 'Lowest',\n    value: 'Lowest',\n  },\n]\n\nconst apiConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass Home extends Component {\n  state = {\n    apiStatus: apiConstants.initial,\n    activePage: 1,\n    LIMIT: 9,\n    sortByRatingValue: sortByOptions[1].value,\n    searchValue: '',\n    carouselImageList: [],\n    restaurantsList: [],\n  }\n\n  componentDidMount() {\n    this.getCarouselImages()\n    this.getRestaurantsList()\n  }\n\n  getRestaurantsList = async () => {\n    this.setState({apiStatus: apiConstants.inProgress})\n    const {activePage, LIMIT, searchValue, sortByRatingValue} = this.state\n    const offset = (activePage - 1) * LIMIT\n    const restaurantsListUrl = `https://apis.ccbp.in/restaurants-list?search=${searchValue}&offset=${offset}&limit=${LIMIT}&sort_by_rating=${sortByRatingValue}`\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const restaurantsResponse = await fetch(restaurantsListUrl, options)\n    if (restaurantsResponse.ok) {\n      const restaurantsData = await restaurantsResponse.json()\n      const formattedRestaurantsData = restaurantsData.restaurants.map(\n        eachItem => ({\n          costForTwo: eachItem.cost_for_two,\n          name: eachItem.name,\n          cuisine: eachItem.cuisine,\n          groupByTime: eachItem.group_by_time,\n          hasOnlineDelivery: eachItem.has_online_delivery,\n          hasTableBooking: eachItem.has_table_booking,\n          id: eachItem.id,\n          imageUrl: eachItem.image_url,\n          isDeliveredNow: eachItem.is_delivering_now,\n          location: eachItem.location,\n          menuType: eachItem.menu_type,\n          opensAt: eachItem.opens_at,\n          userRating: {\n            rating: eachItem.user_rating.rating,\n            ratingColor: eachItem.user_rating.rating_color,\n            ratingText: eachItem.user_rating.rating_text,\n            totalReviews: eachItem.user_rating.total_reviews,\n          },\n        }),\n      )\n      this.setState({\n        apiStatus: apiConstants.success,\n        restaurantsList: formattedRestaurantsData,\n      })\n    } else {\n      this.setState({apiStatus: apiConstants.failure})\n    }\n  }\n\n  getCarouselImages = async () => {\n    this.setState({apiStatus: apiConstants.inProgress})\n    const carouselImagesUrl = 'https://apis.ccbp.in/restaurants-list/offers'\n    const jwtToken = Cookies.get('jwt_token')\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const response = await fetch(carouselImagesUrl, options)\n    if (response.ok) {\n      const responseData = await response.json()\n      const formattedData = await responseData.offers.map(eachItem => ({\n        id: eachItem.id,\n        imageUlr: eachItem.image_url,\n      }))\n      this.setState({\n        carouselImageList: formattedData,\n        apiStatus: apiConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiConstants.failure})\n    }\n  }\n\n  onClickTryAgainButton = () => {\n    this.getCarouselImages()\n  }\n\n  renderOffersFailureContainer = () => (\n    <div className=\"slick-not-found-bg-container\">\n      <div className=\"slick-not-found-content-container\">\n        <img\n          src=\"https://res.cloudinary.com/tskhayagreevac/image/upload/v1634989299/erroring_1_vevkhn.jpg\"\n          alt=\"not found\"\n          className=\"slick-not-found-image\"\n        />\n        <h1 className=\"not-found-heading\">Offers Not Found</h1>\n        <p className=\"not-found-para\">\n          we are sorry, the offers are not found. Please try again...\n        </p>\n        <button\n          type=\"button\"\n          className=\"home-page-button\"\n          onClick={this.onClickTryAgainButton}\n        >\n          Try Again\n        </button>\n      </div>\n    </div>\n  )\n\n  renderSlickLoader = () => (\n    <div\n      className=\"slick-loader-bg-container\"\n      testid=\"restaurants-offers-loader\"\n    >\n      <Loader type=\"TailSpin\" color=\"#334155\" />\n    </div>\n  )\n\n  renderReactSlider = () => {\n    const {carouselImageList} = this.state\n    const settings = {\n      className: 'slider-style',\n      infinite: true,\n      dots: true,\n      autoplay: true,\n      speed: 2000,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n    }\n    return (\n      <Slider className=\"react-slick-slider-style\" {...settings}>\n        {carouselImageList.map(eachItem => (\n          <div key={eachItem.id} className=\"react-slider-list-item\">\n            <img\n              className=\"carousel-image-style\"\n              src={eachItem.imageUlr}\n              alt=\"offer\"\n            />\n          </div>\n        ))}\n      </Slider>\n    )\n  }\n\n  renderReactSliderContainer = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiConstants.success:\n        return this.renderReactSlider()\n      case apiConstants.failure:\n        return this.renderOffersFailureContainer()\n      case apiConstants.inProgress:\n        return this.renderSlickLoader()\n      default:\n        return null\n    }\n  }\n\n  onChangeSelectValue = event => {\n    this.setState(\n      {sortByRatingValue: event.target.value},\n      this.getRestaurantsList,\n    )\n  }\n\n  incrementPageNumber = () => {\n    const {activePage} = this.state\n    if (activePage < 4) {\n      this.setState(\n        prevState => ({activePage: prevState.activePage + 1}),\n        this.getRestaurantsList,\n      )\n    }\n  }\n\n  decrementPageNumber = () => {\n    const {activePage} = this.state\n    if (activePage > 1) {\n      this.setState(\n        prevState => ({activePage: prevState.activePage - 1}),\n        this.getRestaurantsList,\n      )\n    }\n  }\n\n  renderLoader = () => (\n    <div className=\"loader-bg-container\" testid=\"restaurants-list-loader\">\n      <Loader type=\"TailSpin\" color=\"#334155\" size=\"22px\" />\n    </div>\n  )\n\n  renderFailureContainer = () => (\n    <div className=\"not-found-bg-container\">\n      <div className=\"not-found-content-container\">\n        <img\n          src=\"https://res.cloudinary.com/tskhayagreevac/image/upload/v1634989299/erroring_1_vevkhn.jpg\"\n          alt=\"not found\"\n        />\n        <h1 className=\"not-found-heading\">Page Not Found</h1>\n        <p className=\"not-found-para\">\n          we are sorry, the page you requested could not be found. Please go\n          back to the homepage\n        </p>\n        <button\n          type=\"button\"\n          className=\"home-page-button\"\n          onClick={this.onClickHomeButton}\n        >\n          Home Page\n        </button>\n      </div>\n    </div>\n  )\n\n  renderRestaurantsList = () => {\n    const {restaurantsList, activePage} = this.state\n    return (\n      <div className=\"home-content-container\">\n        <ul className=\"restaurants-list\">\n          {restaurantsList.map(eachItem => (\n            <RestaurantListItem key={eachItem.id} restaurantItem={eachItem} />\n          ))}\n        </ul>\n        <div className=\"pagination-container\">\n          <button\n            className=\"pagination-button\"\n            type=\"button\"\n            onClick={this.decrementPageNumber}\n            testid=\"pagination-left-button\"\n          >\n            <BiChevronLeftSquare size=\"24px\" color=\"#334155\" />\n          </button>\n\n          <p className=\"pagination-text\">\n            <span testid=\"active-page-number\">{`${activePage}`}</span> of 4\n          </p>\n          <button\n            className=\"pagination-button\"\n            type=\"button\"\n            onClick={this.incrementPageNumber}\n            testid=\"pagination-right-button\"\n          >\n            <BiChevronRightSquare size=\"24px\" color=\"#334155\" />\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  renderHome = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiConstants.success:\n        return this.renderRestaurantsList()\n      case apiConstants.failure:\n        return this.renderFailureContainer()\n      case apiConstants.inProgress:\n        return this.renderLoader()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    const {sortByRatingValue} = this.state\n    return (\n      <>\n        <Header />\n        <div className=\"home-main-content-container\">\n          {this.renderReactSliderContainer()}\n          <div className=\"home-content-container\">\n            <div className=\"home-top-container\">\n              <div className=\"home-heading-para-container\">\n                <h1 className=\"home-container-heading\">Popular Restaurants</h1>\n                <p className=\"home-content-para\">\n                  Select Your favourite restaurant special dish and make your\n                  day happy...\n                </p>\n              </div>\n              <div className=\"dropdown-container\">\n                <BsFilterLeft size=\"24px\" />\n                <p className=\"sort-by-para\">Sort By</p>\n                <select\n                  value={sortByRatingValue}\n                  onChange={this.onChangeSelectValue}\n                  className=\"drop-down-select\"\n                >\n                  {sortByOptions.map(eachItem => (\n                    <option\n                      className=\"drop-down-option\"\n                      key={eachItem.id}\n                      value={eachItem.value}\n                    >\n                      {`${eachItem.displayText}`}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            <hr className=\"hr-style\" />\n          </div>\n          {this.renderHome()}\n        </div>\n        <Footer />\n      </>\n    )\n  }\n}\n\nexport default Home\n","import {Component} from 'react'\n\nimport './index.css'\n\nclass Counter extends Component {\n  onDecrement = () => {\n    const {cartListItem, reloadCart} = this.props\n    const cartDataList = JSON.parse(localStorage.getItem('cartData'))\n    const currentFoodItem = cartDataList.find(\n      eachItem => eachItem.id === cartListItem.id,\n    )\n    if (currentFoodItem.quantity > 1) {\n      const quantity = currentFoodItem.quantity - 1\n      const updatedFoodItem = {...cartListItem, quantity}\n      const newCartDataList = cartDataList.filter(\n        eachItem => eachItem.id !== cartListItem.id,\n      )\n      const foodItemIndex = cartDataList.findIndex(\n        eachItem => eachItem.id === cartListItem.id,\n      )\n      newCartDataList.splice(foodItemIndex, 0, updatedFoodItem)\n      const newCartDataListString = JSON.stringify(newCartDataList)\n      localStorage.setItem('cartData', newCartDataListString)\n      reloadCart()\n    } else {\n      const newCartDataList = cartDataList.filter(\n        eachItem => eachItem.id !== cartListItem.id,\n      )\n      const newCartDataListString = JSON.stringify(newCartDataList)\n      localStorage.setItem('cartData', newCartDataListString)\n      reloadCart()\n    }\n  }\n\n  onIncrement = () => {\n    const {cartListItem, reloadCart} = this.props\n    const cartDataList = JSON.parse(localStorage.getItem('cartData'))\n    const currentFoodItem = cartDataList.find(\n      eachItem => eachItem.id === cartListItem.id,\n    )\n    const quantity = currentFoodItem.quantity + 1\n    const updatedFoodItem = {...cartListItem, quantity}\n    const newCartDataList = cartDataList.filter(\n      eachItem => eachItem.id !== cartListItem.id,\n    )\n    const foodItemIndex = cartDataList.findIndex(\n      eachItem => eachItem.id === cartListItem.id,\n    )\n    newCartDataList.splice(foodItemIndex, 0, updatedFoodItem)\n    const newCartDataListString = JSON.stringify(newCartDataList)\n    localStorage.setItem('cartData', newCartDataListString)\n    reloadCart()\n  }\n\n  render() {\n    const {cartListItem} = this.props\n    const cartDataList = JSON.parse(localStorage.getItem('cartData'))\n    const currentFoodItem = cartDataList.find(\n      eachItem => eachItem.id === cartListItem.id,\n    )\n    return (\n      <div className=\"item-counter-container\">\n        <button\n          className=\"cart-item-decrement-button\"\n          type=\"button\"\n          onClick={this.onDecrement}\n          testid=\"decrement-count\"\n        >\n          -\n        </button>\n        <div>\n          <p className=\"item-count\" testid=\"active-count\">\n            {currentFoodItem.quantity}\n          </p>\n        </div>\n        <button\n          className=\"cart-item-increment-button\"\n          type=\"button\"\n          onClick={this.onIncrement}\n          testid=\"increment-count\"\n        >\n          +\n        </button>\n      </div>\n    )\n  }\n}\n\nexport default Counter\n","import {BiRupee} from 'react-icons/bi'\nimport {AiFillStar} from 'react-icons/ai'\n\nimport Counter from '../Counter'\n\nimport './index.css'\n\nconst RestaurantFoodItem = props => {\n  const {foodItem, onAddReloadRestaurantDetails} = props\n\n  const onClickAddFoodItemButton = () => {\n    const itemQuantity = 1\n    const updatedFoodItem = {\n      cost: foodItem.cost,\n      quantity: itemQuantity,\n      id: foodItem.id,\n      imageUrl: foodItem.imageUrl,\n      name: foodItem.name,\n    }\n    const isCartDataSaved = localStorage.getItem('cartData') === null\n    if (isCartDataSaved) {\n      const cartList = []\n      cartList.push(updatedFoodItem)\n      const stringifiedCartList = JSON.stringify(cartList)\n      localStorage.setItem('cartData', stringifiedCartList)\n    } else {\n      const savedCartList = JSON.parse(localStorage.getItem('cartData'))\n      const isItemThere =\n        savedCartList.find(eachItem => eachItem.id === updatedFoodItem.id) !==\n        undefined\n      if (isItemThere) {\n        console.log('item is already saved')\n      } else {\n        savedCartList.push(updatedFoodItem)\n        const updatedCartItemsString = JSON.stringify(savedCartList)\n        localStorage.setItem('cartData', updatedCartItemsString)\n      }\n    }\n    onAddReloadRestaurantDetails()\n  }\n\n  const foodItemAddButtonOrCounter = () => {\n    const cartDataForAddItemButton = JSON.parse(\n      localStorage.getItem('cartData'),\n    )\n    if (cartDataForAddItemButton === null) {\n      return (\n        <button\n          className=\"add-food-item-button\"\n          type=\"button\"\n          onClick={onClickAddFoodItemButton}\n        >\n          Add\n        </button>\n      )\n    }\n    const foodItemAddButton = cartDataForAddItemButton.find(\n      eachItem => eachItem.id === foodItem.id,\n    )\n    const isFoodItemSaved = foodItemAddButton === undefined\n    return isFoodItemSaved ? (\n      <button\n        className=\"add-food-item-button\"\n        type=\"button\"\n        onClick={onClickAddFoodItemButton}\n      >\n        Add\n      </button>\n    ) : (\n      <Counter\n        cartListItem={foodItem}\n        reloadCart={onAddReloadRestaurantDetails}\n      />\n    )\n  }\n\n  return (\n    <li className=\"restaurant-details-food-item\" testid=\"foodItem\">\n      <div className=\"restaurant-details-food-item-container\">\n        <img\n          className=\"restaurant-details-food-item-image\"\n          src={foodItem.imageUrl}\n          alt=\"foodItem\"\n        />\n        <div className=\"restaurant-details-food-item-content-container\">\n          <h1 className=\"food-item-head-text\">{foodItem.name}</h1>\n          <div className=\"cost-symbol-row-container\">\n            <BiRupee />\n            <p className=\"restaurant-details-food-item-cost-text\">\n              {foodItem.cost}\n            </p>\n          </div>\n          <div className=\"restaurant-details-rating-row-container\">\n            <AiFillStar color=\"#FFCC00\" />\n            <p className=\"restaurant-details-food-item-rating-text\">\n              {foodItem.rating}\n            </p>\n          </div>\n          {foodItemAddButtonOrCounter()}\n        </div>\n      </div>\n    </li>\n  )\n}\n\nexport default RestaurantFoodItem\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport Cookies from 'js-cookie'\n\nimport {AiFillStar} from 'react-icons/ai'\nimport {BiRupee} from 'react-icons/bi'\n\nimport Header from '../Header'\nimport RestaurantFoodItem from '../RestaurantFoodItem'\nimport Footer from '../Footer'\n\nimport './index.css'\n\nconst apiConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass RestaurantDetails extends Component {\n  state = {\n    apiStatus: apiConstants.success,\n    restaurantDetails: [],\n    foodItems: [],\n    reloadRestaurantDetails: false,\n  }\n\n  componentDidMount() {\n    this.getRestaurantDetails()\n  }\n\n  getRestaurantDetails = async () => {\n    this.setState({apiStatus: apiConstants.inProgress})\n    const {match} = this.props\n    const {params} = match\n    const {id} = params\n    const jwtToken = Cookies.get('jwt_token')\n    const restaurantDetailsUrl = `https://apis.ccbp.in/restaurants-list/${id}`\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    }\n    const restaurantsDetailsResponse = await fetch(\n      restaurantDetailsUrl,\n      options,\n    )\n    if (restaurantsDetailsResponse.ok) {\n      const restaurantDetailsData = await restaurantsDetailsResponse.json()\n      const formattedRestaurantDetailsData = {\n        costForTwo: restaurantDetailsData.cost_for_two,\n        cuisine: restaurantDetailsData.cuisine,\n        id: restaurantDetailsData.id,\n        imageUrl: restaurantDetailsData.image_url,\n        itemsCount: restaurantDetailsData.items_count,\n        location: restaurantDetailsData.location,\n        name: restaurantDetailsData.name,\n        opensAt: restaurantDetailsData.opens_at,\n        rating: restaurantDetailsData.rating,\n        reviewsCount: restaurantDetailsData.reviews_count,\n      }\n      const formattedFoodItemsData = restaurantDetailsData.food_items.map(\n        eachItem => ({\n          cost: eachItem.cost,\n          foodType: eachItem.food_type,\n          id: eachItem.id,\n          imageUrl: eachItem.image_url,\n          name: eachItem.name,\n          rating: eachItem.rating,\n        }),\n      )\n      this.setState({\n        restaurantDetails: formattedRestaurantDetailsData,\n        foodItems: formattedFoodItemsData,\n        apiStatus: apiConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiConstants.failure})\n    }\n  }\n\n  onAddReloadRestaurantDetails = () => {\n    this.setState(prevState => ({\n      reloadRestaurantDetails: !prevState.reloadRestaurantDetails,\n    }))\n  }\n\n  renderLoader = () => (\n    <div className=\"loader-bg-container\" testid=\"restaurant-details-loader\">\n      <Loader type=\"TailSpin\" color=\"#334155\" size=\"22px\" />\n    </div>\n  )\n\n  renderFailureContainer = () => (\n    <div className=\"not-found-bg-container\">\n      <div className=\"not-found-content-container\">\n        <img\n          src=\"https://res.cloudinary.com/tskhayagreevac/image/upload/v1634989299/erroring_1_vevkhn.jpg\"\n          alt=\"not found\"\n        />\n        <h1 className=\"not-found-heading\">Page Not Found</h1>\n        <p className=\"not-found-para\">\n          we are sorry, the page you requested could not be found. Please go\n          back to the homepage\n        </p>\n        <button\n          type=\"button\"\n          className=\"home-page-button\"\n          onClick={this.onClickHomeButton}\n        >\n          Home Page\n        </button>\n      </div>\n    </div>\n  )\n\n  renderRestaurantDetails = () => {\n    const {restaurantDetails, foodItems} = this.state\n    return (\n      <div className=\"restaurant-details-container\">\n        <div className=\"restaurant-details-top-container\">\n          <img\n            className=\"restaurant-details-top-image\"\n            src={restaurantDetails.imageUrl}\n            alt=\"restaurant\"\n          />\n          <div className=\"restaurant-details-top-content-container\">\n            <h1 className=\"restaurant-details-top-heading\">\n              {restaurantDetails.name}\n            </h1>\n            <p className=\"restaurant-details-top-para\">\n              {restaurantDetails.cuisine}\n            </p>\n            <p className=\"restaurant-details-top-para\">\n              {restaurantDetails.location}\n            </p>\n            <div className=\"restaurant-details-rating-cost-container\">\n              <div className=\"restaurant-details-rating-container\">\n                <div className=\"restaurant-details-rating-row-container\">\n                  <AiFillStar color=\"#ffffff\" />\n                  <p className=\"restaurant-details-rating-text\">\n                    {restaurantDetails.rating}\n                  </p>\n                </div>\n                <p className=\"restaurant-details-rating-count\">\n                  {`${restaurantDetails.reviewsCount}+ Rating`}\n                </p>\n              </div>\n              <hr className=\"restaurant-details-line\" />\n              <div className=\"restaurant-details-cost-container\">\n                <div className=\"cost-symbol-row-container\">\n                  <BiRupee color=\"#ffffff\" />\n                  <p className=\"restaurant-details-cost-text\">\n                    {restaurantDetails.costForTwo}\n                  </p>\n                </div>\n                <p className=\"cost-for-two-text\">Cost for two</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <ul className=\"restaurant-details-food-items-list\">\n          {foodItems.map(eachItem => (\n            <RestaurantFoodItem\n              key={eachItem.id}\n              foodItem={eachItem}\n              onAddReloadRestaurantDetails={this.onAddReloadRestaurantDetails}\n            />\n          ))}\n        </ul>\n        <Footer />\n      </div>\n    )\n  }\n\n  renderRestaurantDetailsPage = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiConstants.success:\n        return this.renderRestaurantDetails()\n      case apiConstants.failure:\n        return this.renderFailureContainer()\n      case apiConstants.inProgress:\n        return this.renderLoader()\n      default:\n        return null\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"restaurant-details-bg-container\">\n        <Header />\n        {this.renderRestaurantDetailsPage()}\n      </div>\n    )\n  }\n}\n\nexport default RestaurantDetails\n","import {Component} from 'react'\n\nimport {BiRupee} from 'react-icons/bi'\n\nimport Counter from '../Counter'\n\nimport './index.css'\n\nclass CartListItem extends Component {\n  render() {\n    const {cartListItem, reloadCart} = this.props\n    return (\n      <li className=\"cart-list-item\">\n        <div className=\"cart-list-item-container\" testid=\"cartItem\">\n          <img\n            className=\"cart-item-image-small\"\n            src={cartListItem.imageUrl}\n            alt=\"cartImage\"\n          />\n          <div className=\"cart-item-container\">\n            <div className=\"cart-item-image-name-container\">\n              <img\n                className=\"cart-list-item-image\"\n                src={cartListItem.imageUrl}\n                alt=\"cartImage\"\n              />\n              <h1 className=\"cart-item-name\">{cartListItem.name}</h1>\n            </div>\n            <div className=\"cart-item-quantity-container\">\n              <Counter cartListItem={cartListItem} reloadCart={reloadCart} />\n            </div>\n            <div className=\"cart-item-price-container\">\n              <BiRupee size=\"20px\" />\n              <p className=\"cart-item-price-text\">{cartListItem.cost}</p>\n            </div>\n          </div>\n        </div>\n      </li>\n    )\n  }\n}\n\nexport default CartListItem\n","import {Component} from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {BiRupee} from 'react-icons/bi'\n\nimport Header from '../Header'\nimport CartListItem from '../CartListItem'\n\nimport './index.css'\n\nclass Cart extends Component {\n  state = {\n    reloadCart: false,\n    placedOrderSuccessfully: false,\n  }\n\n  reloadCart = () => {\n    this.setState(prevState => ({reloadCart: !prevState.reloadCart}))\n  }\n\n  onClickPlaceOrder = () => {\n    this.setState({placedOrderSuccessfully: true})\n    localStorage.removeItem('cartData')\n  }\n\n  renderSuccessFullyPlacedOrderPage = () => (\n    <div className=\"placed-order-success-page\">\n      <img\n        className=\"placed-order-success-image\"\n        src=\"https://res.cloudinary.com/tskhayagreevac/image/upload/v1635641160/Vector_1_xgk7ng.png\"\n        alt=\"placedOrder\"\n      />\n      <h1 className=\"placed-order-success-heading\">Payment Successful</h1>\n      <p className=\"placed-order-success-para\">\n        Thank you for ordering Your payment is successfully completed.\n      </p>\n      <Link to=\"/\">\n        <button className=\"empty-cart-button\" type=\"button\">\n          Go To Home Page\n        </button>\n      </Link>\n    </div>\n  )\n\n  renderEmptyCartView = () => (\n    <div className=\"empty-cart-container\">\n      <img\n        className=\"empty-cart-image\"\n        src=\"https://res.cloudinary.com/tskhayagreevac/image/upload/v1635614049/OBJECTS_prg6sc.png\"\n        alt=\"empty cart\"\n      />\n      <h1 className=\"empty-cart-heading\">No Order Yet!</h1>\n      <p className=\"empty-cart-text\">\n        Your cart is empty. Add something from the menu.\n      </p>\n      <Link to=\"/\">\n        <button className=\"empty-cart-button\" type=\"button\">\n          Order Now\n        </button>\n      </Link>\n    </div>\n  )\n\n  renderCartListView = () => {\n    const cartItemsList = JSON.parse(localStorage.getItem('cartData'))\n    const itemsSum = cartItemsList.map(\n      eachItem => eachItem.cost * eachItem.quantity,\n    )\n    let orderTotal = 0\n    itemsSum.forEach(eachItem => {\n      orderTotal += eachItem\n    })\n\n    return (\n      <div className=\"cart-list-bg-container\">\n        <div className=\"cart-items-list-container\">\n          <div className=\"cart-items-list-heading-container\">\n            <p className=\"cart-list-heading\">Item</p>\n            <p className=\"cart-list-heading\">Quantity</p>\n            <p className=\"cart-list-heading\">Price</p>\n          </div>\n          <ul className=\"cart-items-list\">\n            {cartItemsList.map(eachItem => (\n              <CartListItem\n                key={eachItem.id}\n                cartListItem={eachItem}\n                reloadCart={this.reloadCart}\n              />\n            ))}\n          </ul>\n          <hr className=\"cart-list-line\" />\n          <div className=\"order-price-container\">\n            <h1 className=\"order-items-heading\">Order Total:</h1>\n            <div className=\"order-total-count-container\">\n              <BiRupee size=\"32px\" color=\"#3e4c59\" />\n              <h1 className=\"order-total-count\" testid=\"total-price\">\n                {orderTotal}\n              </h1>\n            </div>\n          </div>\n          <button\n            className=\"place-order-button\"\n            type=\"button\"\n            onClick={this.onClickPlaceOrder}\n          >\n            Place Order\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  renderCartPage = () => {\n    const cartItemsString = localStorage.getItem('cartData')\n    const cartItemsList = JSON.parse(cartItemsString)\n    const isCartEmpty = cartItemsList === null || cartItemsList.length === 0\n    return (\n      <>\n        {isCartEmpty ? this.renderEmptyCartView() : this.renderCartListView()}\n      </>\n    )\n  }\n\n  render() {\n    const {placedOrderSuccessfully} = this.state\n    return (\n      <div className=\"cart-bg-container\">\n        <Header />\n        {placedOrderSuccessfully\n          ? this.renderSuccessFullyPlacedOrderPage()\n          : this.renderCartPage()}\n      </div>\n    )\n  }\n}\n\nexport default Cart\n","import {Component} from 'react'\nimport {Link} from 'react-router-dom'\n\nimport Header from '../Header'\nimport Footer from '../Footer'\n\nimport './index.css'\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div className=\"not-found-bg-container\">\n        <Header />\n        <div className=\"page-not-found-bg-container\">\n          <div className=\"page-not-found-content-container\">\n            <img\n              src=\"https://res.cloudinary.com/tskhayagreevac/image/upload/v1634989299/erroring_1_vevkhn.jpg\"\n              alt=\"not found\"\n              className=\"page-not-found-image\"\n            />\n            <h1 className=\"page-not-found-heading\">Page Not Found</h1>\n            <p className=\"page-not-found-para\">\n              we are sorry, the page you requested could not be found Please go\n              back to the homepage\n            </p>\n            <Link to=\"/\">\n              <button type=\"button\" className=\"home-page-button\">\n                Home Page\n              </button>\n            </Link>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default NotFound\n","import {Route, Redirect} from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nconst AuthenticatedRoute = props => {\n  const jwtToken = Cookies.get('jwt_token')\n  if (jwtToken === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default AuthenticatedRoute\n","import {Switch, Route, Redirect} from 'react-router-dom'\n\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport RestaurantDetails from './components/RestaurantDetails'\nimport Cart from './components/Cart'\nimport NotFound from './components/NotFound'\nimport AuthenticatedRoute from './components/AuthenticatedRoute'\n\nimport './App.css'\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={Login} />\n    <AuthenticatedRoute exact path=\"/\" component={Home} />\n    <AuthenticatedRoute\n      exact\n      path=\"/restaurant/:id\"\n      component={RestaurantDetails}\n    />\n    <AuthenticatedRoute exact path=\"/cart\" component={Cart} />\n    <Route exact path=\"/not-found\" component={NotFound} />\n    <Redirect to=\"/not-found\" />\n  </Switch>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}